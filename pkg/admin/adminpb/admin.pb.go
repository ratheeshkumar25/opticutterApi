// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: admin.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdminResponse_Status int32

const (
	AdminResponse_OK    AdminResponse_Status = 0
	AdminResponse_ERROR AdminResponse_Status = 1
)

// Enum value maps for AdminResponse_Status.
var (
	AdminResponse_Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	AdminResponse_Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x AdminResponse_Status) Enum() *AdminResponse_Status {
	p := new(AdminResponse_Status)
	*p = x
	return p
}

func (x AdminResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdminResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_proto_enumTypes[0].Descriptor()
}

func (AdminResponse_Status) Type() protoreflect.EnumType {
	return &file_admin_proto_enumTypes[0]
}

func (x AdminResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdminResponse_Status.Descriptor instead.
func (AdminResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{3, 0}
}

type AdID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *AdID) Reset() {
	*x = AdID{}
	mi := &file_admin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdID) ProtoMessage() {}

func (x *AdID) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdID.ProtoReflect.Descriptor instead.
func (*AdID) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{0}
}

func (x *AdID) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type AdminLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AdminLogin) Reset() {
	*x = AdminLogin{}
	mi := &file_admin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLogin) ProtoMessage() {}

func (x *AdminLogin) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLogin.ProtoReflect.Descriptor instead.
func (*AdminLogin) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{1}
}

func (x *AdminLogin) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AdminLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AdminProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Admin_ID uint32 `protobuf:"varint,1,opt,name=Admin_ID,json=AdminID,proto3" json:"Admin_ID,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *AdminProfile) Reset() {
	*x = AdminProfile{}
	mi := &file_admin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminProfile) ProtoMessage() {}

func (x *AdminProfile) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminProfile.ProtoReflect.Descriptor instead.
func (*AdminProfile) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{2}
}

func (x *AdminProfile) GetAdmin_ID() uint32 {
	if x != nil {
		return x.Admin_ID
	}
	return 0
}

func (x *AdminProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type AdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  AdminResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.AdminResponse_Status" json:"status,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*AdminResponse_Error
	//	*AdminResponse_Data
	Payload isAdminResponse_Payload `protobuf_oneof:"payload"`
}

func (x *AdminResponse) Reset() {
	*x = AdminResponse{}
	mi := &file_admin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminResponse) ProtoMessage() {}

func (x *AdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminResponse.ProtoReflect.Descriptor instead.
func (*AdminResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{3}
}

func (x *AdminResponse) GetStatus() AdminResponse_Status {
	if x != nil {
		return x.Status
	}
	return AdminResponse_OK
}

func (x *AdminResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *AdminResponse) GetPayload() isAdminResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AdminResponse) GetError() string {
	if x, ok := x.GetPayload().(*AdminResponse_Error); ok {
		return x.Error
	}
	return ""
}

func (x *AdminResponse) GetData() string {
	if x, ok := x.GetPayload().(*AdminResponse_Data); ok {
		return x.Data
	}
	return ""
}

type isAdminResponse_Payload interface {
	isAdminResponse_Payload()
}

type AdminResponse_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type AdminResponse_Data struct {
	Data string `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

func (*AdminResponse_Error) isAdminResponse_Payload() {}

func (*AdminResponse_Data) isAdminResponse_Payload() {}

// Material messages
type AdminMaterial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Material_ID   uint32  `protobuf:"varint,1,opt,name=Material_ID,json=MaterialID,proto3" json:"Material_ID,omitempty"`
	Material_Name string  `protobuf:"bytes,2,opt,name=Material_Name,json=MaterialName,proto3" json:"Material_Name,omitempty"`
	Description   string  `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Stock         int32   `protobuf:"varint,4,opt,name=Stock,proto3" json:"Stock,omitempty"`
	Price         float64 `protobuf:"fixed64,5,opt,name=Price,proto3" json:"Price,omitempty"`
}

func (x *AdminMaterial) Reset() {
	*x = AdminMaterial{}
	mi := &file_admin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminMaterial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminMaterial) ProtoMessage() {}

func (x *AdminMaterial) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminMaterial.ProtoReflect.Descriptor instead.
func (*AdminMaterial) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{4}
}

func (x *AdminMaterial) GetMaterial_ID() uint32 {
	if x != nil {
		return x.Material_ID
	}
	return 0
}

func (x *AdminMaterial) GetMaterial_Name() string {
	if x != nil {
		return x.Material_Name
	}
	return ""
}

func (x *AdminMaterial) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AdminMaterial) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *AdminMaterial) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type AdminMaterialList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Materials []*AdminMaterial `protobuf:"bytes,1,rep,name=Materials,proto3" json:"Materials,omitempty"`
}

func (x *AdminMaterialList) Reset() {
	*x = AdminMaterialList{}
	mi := &file_admin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminMaterialList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminMaterialList) ProtoMessage() {}

func (x *AdminMaterialList) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminMaterialList.ProtoReflect.Descriptor instead.
func (*AdminMaterialList) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{5}
}

func (x *AdminMaterialList) GetMaterials() []*AdminMaterial {
	if x != nil {
		return x.Materials
	}
	return nil
}

type AdminMaterialID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *AdminMaterialID) Reset() {
	*x = AdminMaterialID{}
	mi := &file_admin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminMaterialID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminMaterialID) ProtoMessage() {}

func (x *AdminMaterialID) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminMaterialID.ProtoReflect.Descriptor instead.
func (*AdminMaterialID) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{6}
}

func (x *AdminMaterialID) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

// Item messages
type AdminItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item_ID         uint32  `protobuf:"varint,1,opt,name=Item_ID,json=ItemID,proto3" json:"Item_ID,omitempty"`
	Item_Name       string  `protobuf:"bytes,2,opt,name=Item_Name,json=ItemName,proto3" json:"Item_Name,omitempty"`
	Material_ID     uint32  `protobuf:"varint,3,opt,name=Material_ID,json=MaterialID,proto3" json:"Material_ID,omitempty"`
	Length          uint32  `protobuf:"varint,4,opt,name=Length,proto3" json:"Length,omitempty"`
	Width           uint32  `protobuf:"varint,5,opt,name=Width,proto3" json:"Width,omitempty"`
	Fixed_Size_ID   uint32  `protobuf:"varint,6,opt,name=Fixed_Size_ID,json=FixedSizeID,proto3" json:"Fixed_Size_ID,omitempty"`
	Is_Custom       bool    `protobuf:"varint,7,opt,name=Is_Custom,json=IsCustom,proto3" json:"Is_Custom,omitempty"`
	Estimated_Price float32 `protobuf:"fixed32,8,opt,name=Estimated_Price,json=EstimatedPrice,proto3" json:"Estimated_Price,omitempty"`
}

func (x *AdminItem) Reset() {
	*x = AdminItem{}
	mi := &file_admin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminItem) ProtoMessage() {}

func (x *AdminItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminItem.ProtoReflect.Descriptor instead.
func (*AdminItem) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{7}
}

func (x *AdminItem) GetItem_ID() uint32 {
	if x != nil {
		return x.Item_ID
	}
	return 0
}

func (x *AdminItem) GetItem_Name() string {
	if x != nil {
		return x.Item_Name
	}
	return ""
}

func (x *AdminItem) GetMaterial_ID() uint32 {
	if x != nil {
		return x.Material_ID
	}
	return 0
}

func (x *AdminItem) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *AdminItem) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *AdminItem) GetFixed_Size_ID() uint32 {
	if x != nil {
		return x.Fixed_Size_ID
	}
	return 0
}

func (x *AdminItem) GetIs_Custom() bool {
	if x != nil {
		return x.Is_Custom
	}
	return false
}

func (x *AdminItem) GetEstimated_Price() float32 {
	if x != nil {
		return x.Estimated_Price
	}
	return 0
}

type AdminItemID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` // Corrected typo
}

func (x *AdminItemID) Reset() {
	*x = AdminItemID{}
	mi := &file_admin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminItemID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminItemID) ProtoMessage() {}

func (x *AdminItemID) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminItemID.ProtoReflect.Descriptor instead.
func (*AdminItemID) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{8}
}

func (x *AdminItemID) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type AdminItemList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AdminItem `protobuf:"bytes,1,rep,name=Items,proto3" json:"Items,omitempty"`
}

func (x *AdminItemList) Reset() {
	*x = AdminItemList{}
	mi := &file_admin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminItemList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminItemList) ProtoMessage() {}

func (x *AdminItemList) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminItemList.ProtoReflect.Descriptor instead.
func (*AdminItemList) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{9}
}

func (x *AdminItemList) GetItems() []*AdminItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type AdminItemNoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AdminItemNoParams) Reset() {
	*x = AdminItemNoParams{}
	mi := &file_admin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminItemNoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminItemNoParams) ProtoMessage() {}

func (x *AdminItemNoParams) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminItemNoParams.ProtoReflect.Descriptor instead.
func (*AdminItemNoParams) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{10}
}

// Order messages
type AdminOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order_ID   uint32  `protobuf:"varint,1,opt,name=Order_ID,json=OrderID,proto3" json:"Order_ID,omitempty"`
	User_ID    uint32  `protobuf:"varint,2,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Item_ID    uint32  `protobuf:"varint,3,opt,name=Item_ID,json=ItemID,proto3" json:"Item_ID,omitempty"`
	Quantity   int32   `protobuf:"varint,4,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	Status     string  `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
	CustomCut  string  `protobuf:"bytes,6,opt,name=Custom_cut,json=CustomCut,proto3" json:"Custom_cut,omitempty"`
	Is_Custom  bool    `protobuf:"varint,7,opt,name=Is_Custom,json=IsCustom,proto3" json:"Is_Custom,omitempty"`
	Amount     float64 `protobuf:"fixed64,8,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Payment_ID string  `protobuf:"bytes,9,opt,name=Payment_ID,json=PaymentID,proto3" json:"Payment_ID,omitempty"`
}

func (x *AdminOrder) Reset() {
	*x = AdminOrder{}
	mi := &file_admin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminOrder) ProtoMessage() {}

func (x *AdminOrder) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminOrder.ProtoReflect.Descriptor instead.
func (*AdminOrder) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{11}
}

func (x *AdminOrder) GetOrder_ID() uint32 {
	if x != nil {
		return x.Order_ID
	}
	return 0
}

func (x *AdminOrder) GetUser_ID() uint32 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

func (x *AdminOrder) GetItem_ID() uint32 {
	if x != nil {
		return x.Item_ID
	}
	return 0
}

func (x *AdminOrder) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *AdminOrder) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AdminOrder) GetCustomCut() string {
	if x != nil {
		return x.CustomCut
	}
	return ""
}

func (x *AdminOrder) GetIs_Custom() bool {
	if x != nil {
		return x.Is_Custom
	}
	return false
}

func (x *AdminOrder) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AdminOrder) GetPayment_ID() string {
	if x != nil {
		return x.Payment_ID
	}
	return ""
}

type AdminOrderList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*AdminOrder `protobuf:"bytes,1,rep,name=Orders,proto3" json:"Orders,omitempty"`
}

func (x *AdminOrderList) Reset() {
	*x = AdminOrderList{}
	mi := &file_admin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminOrderList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminOrderList) ProtoMessage() {}

func (x *AdminOrderList) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminOrderList.ProtoReflect.Descriptor instead.
func (*AdminOrderList) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{12}
}

func (x *AdminOrderList) GetOrders() []*AdminOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

var File_admin_proto protoreflect.FileDescriptor

var file_admin_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0x16, 0x0a, 0x04, 0x41, 0x64, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x0a, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x3f, 0x0a, 0x0c, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xb1, 0x01, 0x0a, 0x0d, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xa3,
	0x01, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49,
	0x44, 0x12, 0x23, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52,
	0x09, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0xfa, 0x01,
	0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x49,
	0x74, 0x65, 0x6d, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x22, 0x0a, 0x0d, 0x46, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x53, 0x69, 0x7a, 0x65, 0x5f, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x46, 0x69, 0x78, 0x65, 0x64, 0x53, 0x69,
	0x7a, 0x65, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x49, 0x73, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x45, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x1d, 0x0a, 0x0b, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x0d, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x13, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x80, 0x02, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17,
	0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x5f,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63,
	0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x43, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x49, 0x73, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x38, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x32, 0xd3, 0x05, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x36, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x10, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x10, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x49, 0x44, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x0f, 0x46,
	0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0c,
	0x45, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x1a,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x12, 0x38, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x1a, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x37,
	0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x44, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_proto_rawDescOnce sync.Once
	file_admin_proto_rawDescData = file_admin_proto_rawDesc
)

func file_admin_proto_rawDescGZIP() []byte {
	file_admin_proto_rawDescOnce.Do(func() {
		file_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_proto_rawDescData)
	})
	return file_admin_proto_rawDescData
}

var file_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_admin_proto_goTypes = []any{
	(AdminResponse_Status)(0), // 0: pb.AdminResponse.Status
	(*AdID)(nil),              // 1: pb.AdID
	(*AdminLogin)(nil),        // 2: pb.AdminLogin
	(*AdminProfile)(nil),      // 3: pb.AdminProfile
	(*AdminResponse)(nil),     // 4: pb.AdminResponse
	(*AdminMaterial)(nil),     // 5: pb.AdminMaterial
	(*AdminMaterialList)(nil), // 6: pb.AdminMaterialList
	(*AdminMaterialID)(nil),   // 7: pb.AdminMaterialID
	(*AdminItem)(nil),         // 8: pb.AdminItem
	(*AdminItemID)(nil),       // 9: pb.AdminItemID
	(*AdminItemList)(nil),     // 10: pb.AdminItemList
	(*AdminItemNoParams)(nil), // 11: pb.AdminItemNoParams
	(*AdminOrder)(nil),        // 12: pb.AdminOrder
	(*AdminOrderList)(nil),    // 13: pb.AdminOrderList
}
var file_admin_proto_depIdxs = []int32{
	0,  // 0: pb.AdminResponse.status:type_name -> pb.AdminResponse.Status
	5,  // 1: pb.AdminMaterialList.Materials:type_name -> pb.AdminMaterial
	8,  // 2: pb.AdminItemList.Items:type_name -> pb.AdminItem
	12, // 3: pb.AdminOrderList.Orders:type_name -> pb.AdminOrder
	2,  // 4: pb.AdminService.AdminLoginRequest:input_type -> pb.AdminLogin
	1,  // 5: pb.AdminService.AdminBlockUser:input_type -> pb.AdID
	1,  // 6: pb.AdminService.AdminUnblockUser:input_type -> pb.AdID
	1,  // 7: pb.AdminService.AdminViewProfile:input_type -> pb.AdID
	5,  // 8: pb.AdminService.AddMaterial:input_type -> pb.AdminMaterial
	7,  // 9: pb.AdminService.FindMaterialByID:input_type -> pb.AdminMaterialID
	11, // 10: pb.AdminService.FindAllMaterial:input_type -> pb.AdminItemNoParams
	5,  // 11: pb.AdminService.EditMaterial:input_type -> pb.AdminMaterial
	7,  // 12: pb.AdminService.RemoveMaterial:input_type -> pb.AdminMaterialID
	11, // 13: pb.AdminService.FindAllItem:input_type -> pb.AdminItemNoParams
	11, // 14: pb.AdminService.OrderHistory:input_type -> pb.AdminItemNoParams
	9,  // 15: pb.AdminService.FindOrder:input_type -> pb.AdminItemID
	9,  // 16: pb.AdminService.FindOrdersByUser:input_type -> pb.AdminItemID
	4,  // 17: pb.AdminService.AdminLoginRequest:output_type -> pb.AdminResponse
	4,  // 18: pb.AdminService.AdminBlockUser:output_type -> pb.AdminResponse
	4,  // 19: pb.AdminService.AdminUnblockUser:output_type -> pb.AdminResponse
	3,  // 20: pb.AdminService.AdminViewProfile:output_type -> pb.AdminProfile
	4,  // 21: pb.AdminService.AddMaterial:output_type -> pb.AdminResponse
	5,  // 22: pb.AdminService.FindMaterialByID:output_type -> pb.AdminMaterial
	6,  // 23: pb.AdminService.FindAllMaterial:output_type -> pb.AdminMaterialList
	5,  // 24: pb.AdminService.EditMaterial:output_type -> pb.AdminMaterial
	4,  // 25: pb.AdminService.RemoveMaterial:output_type -> pb.AdminResponse
	10, // 26: pb.AdminService.FindAllItem:output_type -> pb.AdminItemList
	13, // 27: pb.AdminService.OrderHistory:output_type -> pb.AdminOrderList
	12, // 28: pb.AdminService.FindOrder:output_type -> pb.AdminOrder
	13, // 29: pb.AdminService.FindOrdersByUser:output_type -> pb.AdminOrderList
	17, // [17:30] is the sub-list for method output_type
	4,  // [4:17] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_admin_proto_init() }
func file_admin_proto_init() {
	if File_admin_proto != nil {
		return
	}
	file_admin_proto_msgTypes[3].OneofWrappers = []any{
		(*AdminResponse_Error)(nil),
		(*AdminResponse_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_proto_goTypes,
		DependencyIndexes: file_admin_proto_depIdxs,
		EnumInfos:         file_admin_proto_enumTypes,
		MessageInfos:      file_admin_proto_msgTypes,
	}.Build()
	File_admin_proto = out.File
	file_admin_proto_rawDesc = nil
	file_admin_proto_goTypes = nil
	file_admin_proto_depIdxs = nil
}
